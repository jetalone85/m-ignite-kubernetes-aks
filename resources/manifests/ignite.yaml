---
# Source: ignite/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ignite
---
# Source: ignite/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ignite-configmap
data:
  ignite-config.xml: |
    <?xml version="1.0" encoding="UTF-8"?>

    <!--
      Licensed to the Apache Software Foundation (ASF) under one or more
      contributor license agreements.  See the NOTICE file distributed with
      this work for additional information regarding copyright ownership.
      The ASF licenses this file to You under the Apache License, Version 2.0
      (the "License"); you may not use this file except in compliance with
      the License.  You may obtain a copy of the License at

           http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    -->

    <!--
        Configuration example with Kubernetes IP finder and Ignite persistence enabled.
        WAL files and database files are stored in separate disk drives.
    -->
    <beans xmlns="http://www.springframework.org/schema/beans"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd">

        <bean class="org.apache.ignite.configuration.IgniteConfiguration">

            <property name="peerClassLoadingEnabled" value="false"/>

            <property name="cacheConfiguration">
              <list>
                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                  <property name="name" value="test-cache"/>
                
                  <!-- Enable statistics for the cache. -->
                  <property name="statisticsEnabled" value="true"/>
                </bean>
              </list>
            </property>

            <!-- Ignite Data Storage Configuration -->
            <property name="dataStorageConfiguration">
                <bean class="org.apache.ignite.configuration.DataStorageConfiguration">
                    <!-- Ignite Persistent Storage -->
                    <property name="defaultDataRegionConfiguration">
                        <bean class="org.apache.ignite.configuration.DataRegionConfiguration">
                            <property name="persistenceEnabled" value="true"/>
                        </bean>
                    </property>

                    <!--
                       Sets a path to the root directory where data and indexes are
                       to be persisted. It's assumed the directory is on a dedicated disk.
                    -->
                    <property name="storagePath" value="/persistence"/>

                    <!--
                        Sets a path to the directory where WAL is stored.
                        It's assumed the directory is on a dedicated disk.
                    -->
                    <property name="walPath" value="/wal"/>

                    <!--
                        Sets a path to the directory where WAL archive is stored.
                        It's assumed the directory is on the same drive with the WAL files.
                    -->
                    <property name="walArchivePath" value="/wal/archive"/>
                    
                </bean>
            </property>

            <property name="binaryConfiguration">
                <bean class="org.apache.ignite.configuration.BinaryConfiguration">
                    <property name="nameMapper">
                        <bean class="org.apache.ignite.binary.BinaryBasicNameMapper">
                            <property name="simpleName" value="true"/>
                        </bean>
                    </property>
                </bean>
            </property>

            <property name="discoverySpi">
              <bean class="org.apache.ignite.spi.discovery.zk.ZookeeperDiscoverySpi">
                <property name="zkConnectionString" value="zk-0.zk-hs.zk.svc.cluster.local,zk-1.zk-hs.zk.svc.cluster.local,zk-2.zk-hs.zk.svc.cluster.local"/>
                <property name="sessionTimeout" value="30000"/>
                <property name="zkRootPath" value="/apacheIgnite"/>
                <property name="joinTimeout" value="10000"/>
              </bean>
            </property>
        </bean>
    </beans>
---
# Source: ignite/templates/account-role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: ignite
rules:
  - apiGroups:
      - ""
    resources: # Here are resources you can access
      - pods
      - endpoints
    verbs: # That is what you can do with them
      - get
      - list
      - watch
---
# Source: ignite/templates/role-binding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: ignite
roleRef:
  kind: ClusterRole
  name: ignite
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: ignite
    namespace: default
---
# Source: ignite/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: ignite
  labels:
    app: ignite
spec:
  ports:
    - name: jdbc
      port: 11211
      targetPort: 11211
    - name: spi-communication
      port: 47100
      targetPort: 47100
    - name: spi-discovery
      port: 47500
      targetPort: 47500
    - name: jmx
      port: 49112
      targetPort: 49112
    - name: sql
      port: 10800
      targetPort: 10800
    - name: rest
      port: 8080
      targetPort: 8080
    - name: thin-clients
      port: 10900
      targetPort: 10900
  clusterIP: None
  selector:
    app: ignite
---
# Source: ignite/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: ignite-public
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  labels:
    app: ignite
spec:
  type: LoadBalancer
  ports:
    - name: jdbc
      port: 11211
      targetPort: 11211
    - name: spi-communication
      port: 47100
      targetPort: 47100
    - name: spi-discovery
      port: 47500
      targetPort: 47500
    - name: jmx
      port: 49112
      targetPort: 49112
    - name: sql
      port: 10800
      targetPort: 10800
    - name: rest
      port: 8080
      targetPort: 8080
    - name: thin-clients
      port: 10900
      targetPort: 10900
  selector:
    app: ignite
---
# Source: ignite/templates/stateful-set.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ignite
  labels:
    app.kubernetes.io/name: ignite
    helm.sh/chart: ignite-1.1.0
    app.kubernetes.io/instance: ignite
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: ignite
  serviceName: ignite
  replicas: 1
  template:
    metadata:
      labels:
        app: ignite
    spec:
      serviceAccountName: ignite
      volumes:
        - name: config-volume
          configMap:
            name: ignite-configmap
            items:
              - key: ignite-config.xml
                path: default-config.xml
      containers:
        - name: ignite
          image: "apacheignite/ignite:2.8.1"
          imagePullPolicy: "Always"
          resources: {}
          env:
            - name: "IGNITE_QUIET"
              value: "false"
            - name: "JVM_OPTS"
              value: "-Djava.net.preferIPv4Stack=true"
            - name: "OPTION_LIBS"
              value: "ignite-kubernetes,ignite-rest-http,ignite-zookeeper"
          ports:
            - containerPort: 11211 # JDBC port number.
            - containerPort: 47100 # communication SPI port number.
            - containerPort: 47500 # discovery SPI port number.
            - containerPort: 49112 # JMX port number.
            - containerPort: 10800 # SQL port number.
            - containerPort: 8080 # REST port number.
            - containerPort: 10900 #Thin clients port number.
          volumeMounts:
            - mountPath: "/wal"
              name: ignite-wal
            - mountPath: "/persistence"
              name: ignite-persistence
            - name: config-volume
              mountPath: /opt/ignite/apache-ignite/config
  volumeClaimTemplates:
    - metadata:
        name: ignite-persistence
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "ignite-persistence-storage-class"
        resources:
          requests:
            storage: 50Gi
    - metadata:
        name: ignite-wal
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "ignite-wal-storage-class"
        resources:
          requests:
            storage: 5Gi
---
# Source: ignite/templates/persistence-storage-class.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ignite-persistence-storage-class
parameters:
  cachingmode: ReadOnly
  kind: Managed
  storageaccounttype: StandardSSD_LRS
provisioner: kubernetes.io/azure-disk
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
# Source: ignite/templates/wal-storage-class.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ignite-wal-storage-class
parameters:
  cachingmode: ReadOnly
  kind: Managed
  storageaccounttype: StandardSSD_LRS
provisioner: kubernetes.io/azure-disk
reclaimPolicy: Delete
volumeBindingMode: Immediate
